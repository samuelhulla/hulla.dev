---
import DocsMenu from '@/components/docs/DocsMenu.astro'
import Page from './Page.astro'
import type { DocsSchemaType } from '@/content/config'
import type { MarkdownHeading } from 'astro'
import { NAVIGATION } from '@/content/navigation'
import { keys } from '@/utils/objects'
import ThemeToggle from '@/components/ThemeToggle.astro'
import TOC from '@/components/docs/TOC.astro'

export type Props = {
  frontmatter: DocsSchemaType
  headings: MarkdownHeading[]
}
const { frontmatter, headings } = Astro.props

const { slug } = Astro.params
const pkg = slug?.split('/')[0] as keyof typeof NAVIGATION

const packages = keys(NAVIGATION).map((pkgName) => ({
  label: `@hulla/${pkgName}`,
  value: pkgName,
}))

// we could do getCollections and map them programatically, but since we need to do sorting
// anyways if we want other order than alphabetical, we might as well hard-code it
// as it's more performant to write a static json-like structure than do sorting and mutation in JS
const chapters = NAVIGATION[pkg] ?? {}
---

<Page class="" title={frontmatter.title}>
  <div class="flex w-full px-8 py-4">
    <nav class="fixed flex justify-end"><ThemeToggle /></nav>
  </div>
  <main class="space-between flex">
    <div
      class="min-h-screen w-[16dvw] bg-text px-8 dark:bg-bg 2xl:max-w-[12dvw]">
      <DocsMenu chapters={chapters} packages={packages} pkg={pkg} />
    </div>
    <article
      class="2xl:min-w-none prose min-w-[64dvw] p-8 dark:prose-invert 2xl:max-w-[50dvw]">
      <h1 class="pb-4">{frontmatter.title}</h1>
      <slot />
    </article>
    <div class="w-[18dvw] 2xl:max-w-[15dvw]">
      <TOC headings={headings} />
    </div>
  </main>
</Page>
